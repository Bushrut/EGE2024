# Задача. Дан массив a0,a1,…an−1. Необходимо выбрать в нём два элемента ai и aj такие, что i<j и разность (aj−ai) максимальна.
# Заметим, что утверждение о том, что элемент aj — максимальный элемент в массиве, неверно
# Например, для массива {10,6,3,4,1,0} необходимо выбрать разность a3−a2, и ни один из выбранных элементов сам по себе не обладает какими-либо особыми свойствами в массиве.
# Очевидно, что можно перебрать все пары ai и aj, но тогда алгоритм не будет линейным.
# Рассмотрим следующую идею. Будем перебирать правый элемент пары aj, а левый элемент ai подбирать наилучшим образом.
# Заметим, что для фиксированного aj наилучшим элементом ai будет минимальный элемент слева от него. Во время перебора правого элемента пары все элементы слева от него уже просмотрены, а значит, при переборе мы можем поддерживать информацию про минимальный элемент (обозначим его индекс imin) на отрезке [0;j−1].
# Пересчитывать imin при увеличении j на 1 будем за O(1). Вычислительная сложность всего алгоритма составляет O(n).
a = [10, 3, 1, ]
idx_i_best = 0
idx_j_best = 1
idx_i_min = 0
for j in range(2, len(a)):
    if a[j - 1] < a[idx_i_min]:
        idx_i_min = j - 1
    if a[j] - a[idx_i_min] > a[idx_j_best] - a[idx_i_best]:
        idx_j_best = j
        idx_i_best = idx_i_min
print(a[idx_i_best], a[idx_j_best])